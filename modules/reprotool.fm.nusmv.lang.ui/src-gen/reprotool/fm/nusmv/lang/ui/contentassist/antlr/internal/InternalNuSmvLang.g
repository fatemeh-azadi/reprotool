/*
* generated by Xtext
*/
grammar InternalNuSmvLang;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package reprotool.fm.nusmv.lang.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package reprotool.fm.nusmv.lang.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import reprotool.fm.nusmv.lang.services.NuSmvLangGrammarAccess;

}

@parser::members {
 
 	private NuSmvLangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(NuSmvLangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Model
ruleModel
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getModulesAssignment()); }
(rule__Model__ModulesAssignment)*
{ after(grammarAccess.getModelAccess().getModulesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMainModule
entryRuleMainModule 
:
{ before(grammarAccess.getMainModuleRule()); }
	 ruleMainModule
{ after(grammarAccess.getMainModuleRule()); } 
	 EOF 
;

// Rule MainModule
ruleMainModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainModuleAccess().getNameAssignment()); }
(rule__MainModule__NameAssignment)
{ after(grammarAccess.getMainModuleAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOtherModule
entryRuleOtherModule 
:
{ before(grammarAccess.getOtherModuleRule()); }
	 ruleOtherModule
{ after(grammarAccess.getOtherModuleRule()); } 
	 EOF 
;

// Rule OtherModule
ruleOtherModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOtherModuleAccess().getGroup()); }
(rule__OtherModule__Group__0)
{ after(grammarAccess.getOtherModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleElement
entryRuleModuleElement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getModuleElementRule()); }
	 ruleModuleElement
{ after(grammarAccess.getModuleElementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ModuleElement
ruleModuleElement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleElementAccess().getAlternatives()); }
(rule__ModuleElement__Alternatives)
{ after(grammarAccess.getModuleElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIVariableDeclaration
entryRuleIVariableDeclaration 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getIVariableDeclarationRule()); }
	 ruleIVariableDeclaration
{ after(grammarAccess.getIVariableDeclarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IVariableDeclaration
ruleIVariableDeclaration
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIVariableDeclarationAccess().getGroup()); }
(rule__IVariableDeclaration__Group__0)
{ after(grammarAccess.getIVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFrozenVariableDeclaration
entryRuleFrozenVariableDeclaration 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getFrozenVariableDeclarationRule()); }
	 ruleFrozenVariableDeclaration
{ after(grammarAccess.getFrozenVariableDeclarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FrozenVariableDeclaration
ruleFrozenVariableDeclaration
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFrozenVariableDeclarationAccess().getGroup()); }
(rule__FrozenVariableDeclaration__Group__0)
{ after(grammarAccess.getFrozenVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleVarBody
entryRuleVarBody 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getVarBodyRule()); }
	 ruleVarBody
{ after(grammarAccess.getVarBodyRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VarBody
ruleVarBody
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarBodyAccess().getGroup()); }
(rule__VarBody__Group__0)
{ after(grammarAccess.getVarBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleDefineDeclaration
entryRuleDefineDeclaration 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getDefineDeclarationRule()); }
	 ruleDefineDeclaration
{ after(grammarAccess.getDefineDeclarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DefineDeclaration
ruleDefineDeclaration
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineDeclarationAccess().getGroup()); }
(rule__DefineDeclaration__Group__0)
{ after(grammarAccess.getDefineDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleDefineBody
entryRuleDefineBody 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getDefineBodyRule()); }
	 ruleDefineBody
{ after(grammarAccess.getDefineBodyRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DefineBody
ruleDefineBody
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineBodyAccess().getGroup()); }
(rule__DefineBody__Group__0)
{ after(grammarAccess.getDefineBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleConstantsDeclaration
entryRuleConstantsDeclaration 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getConstantsDeclarationRule()); }
	 ruleConstantsDeclaration
{ after(grammarAccess.getConstantsDeclarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ConstantsDeclaration
ruleConstantsDeclaration
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantsDeclarationAccess().getGroup()); }
(rule__ConstantsDeclaration__Group__0)
{ after(grammarAccess.getConstantsDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAssignConstraint
entryRuleAssignConstraint 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getAssignConstraintRule()); }
	 ruleAssignConstraint
{ after(grammarAccess.getAssignConstraintRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AssignConstraint
ruleAssignConstraint
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignConstraintAccess().getGroup()); }
(rule__AssignConstraint__Group__0)
{ after(grammarAccess.getAssignConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAssignBody
entryRuleAssignBody 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getAssignBodyRule()); }
	 ruleAssignBody
{ after(grammarAccess.getAssignBodyRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AssignBody
ruleAssignBody
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignBodyAccess().getAlternatives()); }
(rule__AssignBody__Alternatives)
{ after(grammarAccess.getAssignBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleVarBodyAssign
entryRuleVarBodyAssign 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getVarBodyAssignRule()); }
	 ruleVarBodyAssign
{ after(grammarAccess.getVarBodyAssignRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VarBodyAssign
ruleVarBodyAssign
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarBodyAssignAccess().getGroup()); }
(rule__VarBodyAssign__Group__0)
{ after(grammarAccess.getVarBodyAssignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleInitBody
entryRuleInitBody 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getInitBodyRule()); }
	 ruleInitBody
{ after(grammarAccess.getInitBodyRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InitBody
ruleInitBody
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitBodyAccess().getGroup()); }
(rule__InitBody__Group__0)
{ after(grammarAccess.getInitBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNextBody
entryRuleNextBody 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getNextBodyRule()); }
	 ruleNextBody
{ after(grammarAccess.getNextBodyRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NextBody
ruleNextBody
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNextBodyAccess().getGroup()); }
(rule__NextBody__Group__0)
{ after(grammarAccess.getNextBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTransConstraint
entryRuleTransConstraint 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getTransConstraintRule()); }
	 ruleTransConstraint
{ after(grammarAccess.getTransConstraintRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TransConstraint
ruleTransConstraint
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransConstraintAccess().getGroup()); }
(rule__TransConstraint__Group__0)
{ after(grammarAccess.getTransConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleInitConstraint
entryRuleInitConstraint 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getInitConstraintRule()); }
	 ruleInitConstraint
{ after(grammarAccess.getInitConstraintRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InitConstraint
ruleInitConstraint
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitConstraintAccess().getGroup()); }
(rule__InitConstraint__Group__0)
{ after(grammarAccess.getInitConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleInvarConstraint
entryRuleInvarConstraint 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getInvarConstraintRule()); }
	 ruleInvarConstraint
{ after(grammarAccess.getInvarConstraintRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InvarConstraint
ruleInvarConstraint
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInvarConstraintAccess().getGroup()); }
(rule__InvarConstraint__Group__0)
{ after(grammarAccess.getInvarConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFairnessConstraint
entryRuleFairnessConstraint 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getFairnessConstraintRule()); }
	 ruleFairnessConstraint
{ after(grammarAccess.getFairnessConstraintRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FairnessConstraint
ruleFairnessConstraint
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFairnessConstraintAccess().getAlternatives()); }
(rule__FairnessConstraint__Alternatives)
{ after(grammarAccess.getFairnessConstraintAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFairnessExpression
entryRuleFairnessExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getFairnessExpressionRule()); }
	 ruleFairnessExpression
{ after(grammarAccess.getFairnessExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FairnessExpression
ruleFairnessExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFairnessExpressionAccess().getGroup()); }
(rule__FairnessExpression__Group__0)
{ after(grammarAccess.getFairnessExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleJusticeExpression
entryRuleJusticeExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getJusticeExpressionRule()); }
	 ruleJusticeExpression
{ after(grammarAccess.getJusticeExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule JusticeExpression
ruleJusticeExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJusticeExpressionAccess().getGroup()); }
(rule__JusticeExpression__Group__0)
{ after(grammarAccess.getJusticeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCompassionExpression
entryRuleCompassionExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getCompassionExpressionRule()); }
	 ruleCompassionExpression
{ after(grammarAccess.getCompassionExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CompassionExpression
ruleCompassionExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompassionExpressionAccess().getGroup()); }
(rule__CompassionExpression__Group__0)
{ after(grammarAccess.getCompassionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleInvarSpecification
entryRuleInvarSpecification 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getInvarSpecificationRule()); }
	 ruleInvarSpecification
{ after(grammarAccess.getInvarSpecificationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InvarSpecification
ruleInvarSpecification
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInvarSpecificationAccess().getGroup()); }
(rule__InvarSpecification__Group__0)
{ after(grammarAccess.getInvarSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCtlSpecification
entryRuleCtlSpecification 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getCtlSpecificationRule()); }
	 ruleCtlSpecification
{ after(grammarAccess.getCtlSpecificationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CtlSpecification
ruleCtlSpecification
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCtlSpecificationAccess().getGroup()); }
(rule__CtlSpecification__Group__0)
{ after(grammarAccess.getCtlSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleLtlSpecification
entryRuleLtlSpecification 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getLtlSpecificationRule()); }
	 ruleLtlSpecification
{ after(grammarAccess.getLtlSpecificationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LtlSpecification
ruleLtlSpecification
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLtlSpecificationAccess().getGroup()); }
(rule__LtlSpecification__Group__0)
{ after(grammarAccess.getLtlSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getTypeSpecifierRule()); }
	 ruleTypeSpecifier
{ after(grammarAccess.getTypeSpecifierRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeSpecifier
ruleTypeSpecifier
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeSpecifierAccess().getAlternatives()); }
(rule__TypeSpecifier__Alternatives)
{ after(grammarAccess.getTypeSpecifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSimpleType
entryRuleSimpleType 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getSimpleTypeRule()); }
	 ruleSimpleType
{ after(grammarAccess.getSimpleTypeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SimpleType
ruleSimpleType
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleTypeAccess().getAlternatives()); }
(rule__SimpleType__Alternatives)
{ after(grammarAccess.getSimpleTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleModuleType
entryRuleModuleType 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getModuleTypeRule()); }
	 ruleModuleType
{ after(grammarAccess.getModuleTypeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ModuleType
ruleModuleType
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleTypeAccess().getAlternatives()); }
(rule__ModuleType__Alternatives)
{ after(grammarAccess.getModuleTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFormalParameter
entryRuleFormalParameter 
:
{ before(grammarAccess.getFormalParameterRule()); }
	 ruleFormalParameter
{ after(grammarAccess.getFormalParameterRule()); } 
	 EOF 
;

// Rule FormalParameter
ruleFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParameterAccess().getParamIdAssignment()); }
(rule__FormalParameter__ParamIdAssignment)
{ after(grammarAccess.getFormalParameterAccess().getParamIdAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getSimpleExpressionRule()); }
	 ruleSimpleExpression
{ after(grammarAccess.getSimpleExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SimpleExpression
ruleSimpleExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleExpressionAccess().getBinaryExpressionParserRuleCall()); }
	ruleBinaryExpression
{ after(grammarAccess.getSimpleExpressionAccess().getBinaryExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression 
:
{ before(grammarAccess.getBinaryExpressionRule()); }
	 ruleBinaryExpression
{ after(grammarAccess.getBinaryExpressionRule()); } 
	 EOF 
;

// Rule BinaryExpression
ruleBinaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryExpressionAccess().getGroup()); }
(rule__BinaryExpression__Group__0)
{ after(grammarAccess.getBinaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalSimpleExpression
entryRuleTerminalSimpleExpression 
:
{ before(grammarAccess.getTerminalSimpleExpressionRule()); }
	 ruleTerminalSimpleExpression
{ after(grammarAccess.getTerminalSimpleExpressionRule()); } 
	 EOF 
;

// Rule TerminalSimpleExpression
ruleTerminalSimpleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalSimpleExpressionAccess().getAlternatives()); }
(rule__TerminalSimpleExpression__Alternatives)
{ after(grammarAccess.getTerminalSimpleExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNextExpression
entryRuleNextExpression 
:
{ before(grammarAccess.getNextExpressionRule()); }
	 ruleNextExpression
{ after(grammarAccess.getNextExpressionRule()); } 
	 EOF 
;

// Rule NextExpression
ruleNextExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNextExpressionAccess().getGroup()); }
(rule__NextExpression__Group__0)
{ after(grammarAccess.getNextExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBracketExpression
entryRuleBracketExpression 
:
{ before(grammarAccess.getBracketExpressionRule()); }
	 ruleBracketExpression
{ after(grammarAccess.getBracketExpressionRule()); } 
	 EOF 
;

// Rule BracketExpression
ruleBracketExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBracketExpressionAccess().getGroup()); }
(rule__BracketExpression__Group__0)
{ after(grammarAccess.getBracketExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
(rule__UnaryExpression__Group__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCaseExpression
entryRuleCaseExpression 
:
{ before(grammarAccess.getCaseExpressionRule()); }
	 ruleCaseExpression
{ after(grammarAccess.getCaseExpressionRule()); } 
	 EOF 
;

// Rule CaseExpression
ruleCaseExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseExpressionAccess().getGroup()); }
(rule__CaseExpression__Group__0)
{ after(grammarAccess.getCaseExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetExpression
entryRuleSetExpression 
:
{ before(grammarAccess.getSetExpressionRule()); }
	 ruleSetExpression
{ after(grammarAccess.getSetExpressionRule()); } 
	 EOF 
;

// Rule SetExpression
ruleSetExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetExpressionAccess().getGroup()); }
(rule__SetExpression__Group__0)
{ after(grammarAccess.getSetExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEAExpression
entryRuleEAExpression 
:
{ before(grammarAccess.getEAExpressionRule()); }
	 ruleEAExpression
{ after(grammarAccess.getEAExpressionRule()); } 
	 EOF 
;

// Rule EAExpression
ruleEAExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEAExpressionAccess().getGroup()); }
(rule__EAExpression__Group__0)
{ after(grammarAccess.getEAExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolWordConvertExpression
entryRuleBoolWordConvertExpression 
:
{ before(grammarAccess.getBoolWordConvertExpressionRule()); }
	 ruleBoolWordConvertExpression
{ after(grammarAccess.getBoolWordConvertExpressionRule()); } 
	 EOF 
;

// Rule BoolWordConvertExpression
ruleBoolWordConvertExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolWordConvertExpressionAccess().getGroup()); }
(rule__BoolWordConvertExpression__Group__0)
{ after(grammarAccess.getBoolWordConvertExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanConstant
entryRuleBooleanConstant 
:
{ before(grammarAccess.getBooleanConstantRule()); }
	 ruleBooleanConstant
{ after(grammarAccess.getBooleanConstantRule()); } 
	 EOF 
;

// Rule BooleanConstant
ruleBooleanConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanConstantAccess().getAlternatives()); }
(rule__BooleanConstant__Alternatives)
{ after(grammarAccess.getBooleanConstantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryOperator
entryRuleBinaryOperator 
:
{ before(grammarAccess.getBinaryOperatorRule()); }
	 ruleBinaryOperator
{ after(grammarAccess.getBinaryOperatorRule()); } 
	 EOF 
;

// Rule BinaryOperator
ruleBinaryOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
(rule__BinaryOperator__Alternatives)
{ after(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator 
:
{ before(grammarAccess.getUnaryOperatorRule()); }
	 ruleUnaryOperator
{ after(grammarAccess.getUnaryOperatorRule()); } 
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
(rule__UnaryOperator__Alternatives)
{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRange
entryRuleRange 
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeAccess().getGroup()); }
(rule__Range__Group__0)
{ after(grammarAccess.getRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVal
entryRuleVal 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getValRule()); }
	 ruleVal
{ after(grammarAccess.getValRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Val
ruleVal
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValAccess().getAlternatives()); }
(rule__Val__Alternatives)
{ after(grammarAccess.getValAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableIdentifier
entryRuleVariableIdentifier 
:
{ before(grammarAccess.getVariableIdentifierRule()); }
	 ruleVariableIdentifier
{ after(grammarAccess.getVariableIdentifierRule()); } 
	 EOF 
;

// Rule VariableIdentifier
ruleVariableIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableIdentifierAccess().getAlternatives()); }
(rule__VariableIdentifier__Alternatives)
{ after(grammarAccess.getVariableIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Module__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getMainModuleParserRuleCall_1_0()); }
	ruleMainModule
{ after(grammarAccess.getModuleAccess().getMainModuleParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getOtherModuleParserRuleCall_1_1()); }
	ruleOtherModule
{ after(grammarAccess.getModuleAccess().getOtherModuleParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleElementAccess().getVariableDeclarationParserRuleCall_0()); }
	ruleVariableDeclaration
{ after(grammarAccess.getModuleElementAccess().getVariableDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getIVariableDeclarationParserRuleCall_1()); }
	ruleIVariableDeclaration
{ after(grammarAccess.getModuleElementAccess().getIVariableDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getFrozenVariableDeclarationParserRuleCall_2()); }
	ruleFrozenVariableDeclaration
{ after(grammarAccess.getModuleElementAccess().getFrozenVariableDeclarationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getDefineDeclarationParserRuleCall_3()); }
	ruleDefineDeclaration
{ after(grammarAccess.getModuleElementAccess().getDefineDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getConstantsDeclarationParserRuleCall_4()); }
	ruleConstantsDeclaration
{ after(grammarAccess.getModuleElementAccess().getConstantsDeclarationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getAssignConstraintParserRuleCall_5()); }
	ruleAssignConstraint
{ after(grammarAccess.getModuleElementAccess().getAssignConstraintParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getTransConstraintParserRuleCall_6()); }
	ruleTransConstraint
{ after(grammarAccess.getModuleElementAccess().getTransConstraintParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getInitConstraintParserRuleCall_7()); }
	ruleInitConstraint
{ after(grammarAccess.getModuleElementAccess().getInitConstraintParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getInvarConstraintParserRuleCall_8()); }
	ruleInvarConstraint
{ after(grammarAccess.getModuleElementAccess().getInvarConstraintParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getFairnessConstraintParserRuleCall_9()); }
	ruleFairnessConstraint
{ after(grammarAccess.getModuleElementAccess().getFairnessConstraintParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getCtlSpecificationParserRuleCall_10()); }
	ruleCtlSpecification
{ after(grammarAccess.getModuleElementAccess().getCtlSpecificationParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getLtlSpecificationParserRuleCall_11()); }
	ruleLtlSpecification
{ after(grammarAccess.getModuleElementAccess().getLtlSpecificationParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getModuleElementAccess().getInvarSpecificationParserRuleCall_12()); }
	ruleInvarSpecification
{ after(grammarAccess.getModuleElementAccess().getInvarSpecificationParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignBodyAccess().getVarBodyAssignParserRuleCall_0()); }
	ruleVarBodyAssign
{ after(grammarAccess.getAssignBodyAccess().getVarBodyAssignParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAssignBodyAccess().getInitBodyParserRuleCall_1()); }
	ruleInitBody
{ after(grammarAccess.getAssignBodyAccess().getInitBodyParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAssignBodyAccess().getNextBodyParserRuleCall_2()); }
	ruleNextBody
{ after(grammarAccess.getAssignBodyAccess().getNextBodyParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FairnessConstraint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFairnessConstraintAccess().getFairnessExpressionParserRuleCall_0()); }
	ruleFairnessExpression
{ after(grammarAccess.getFairnessConstraintAccess().getFairnessExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFairnessConstraintAccess().getJusticeExpressionParserRuleCall_1()); }
	ruleJusticeExpression
{ after(grammarAccess.getFairnessConstraintAccess().getJusticeExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFairnessConstraintAccess().getCompassionExpressionParserRuleCall_2()); }
	ruleCompassionExpression
{ after(grammarAccess.getFairnessConstraintAccess().getCompassionExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getCTLSPECKeyword_0_0()); }

	'CTLSPEC' 

{ after(grammarAccess.getCtlSpecificationAccess().getCTLSPECKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getCtlSpecificationAccess().getSPECKeyword_0_1()); }

	'SPEC' 

{ after(grammarAccess.getCtlSpecificationAccess().getSPECKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getSimpleTypeParserRuleCall_0()); }
	ruleSimpleType
{ after(grammarAccess.getTypeSpecifierAccess().getSimpleTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getModuleTypeParserRuleCall_1()); }
	ruleModuleType
{ after(grammarAccess.getTypeSpecifierAccess().getModuleTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_0()); }
(rule__SimpleType__Group_0__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_1()); }
(rule__SimpleType__Group_1__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_2()); }
(rule__SimpleType__Group_2__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_3()); }
(rule__SimpleType__Group_3__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_4()); }
(rule__SimpleType__Group_4__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_5()); }
(rule__SimpleType__Group_5__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_6()); }
(rule__SimpleType__Group_6__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getGroup_0()); }
(rule__ModuleType__Group_0__0)
{ after(grammarAccess.getModuleTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getModuleTypeAccess().getGroup_1()); }
(rule__ModuleType__Group_1__0)
{ after(grammarAccess.getModuleTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalSimpleExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalSimpleExpressionAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getTerminalSimpleExpressionAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTerminalSimpleExpressionAccess().getRangeParserRuleCall_1()); }
	ruleRange
{ after(grammarAccess.getTerminalSimpleExpressionAccess().getRangeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTerminalSimpleExpressionAccess().getNextExpressionParserRuleCall_2()); }
	ruleNextExpression
{ after(grammarAccess.getTerminalSimpleExpressionAccess().getNextExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTerminalSimpleExpressionAccess().getBracketExpressionParserRuleCall_3()); }
	ruleBracketExpression
{ after(grammarAccess.getTerminalSimpleExpressionAccess().getBracketExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTerminalSimpleExpressionAccess().getUnaryExpressionParserRuleCall_4()); }
	ruleUnaryExpression
{ after(grammarAccess.getTerminalSimpleExpressionAccess().getUnaryExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTerminalSimpleExpressionAccess().getCaseExpressionParserRuleCall_5()); }
	ruleCaseExpression
{ after(grammarAccess.getTerminalSimpleExpressionAccess().getCaseExpressionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getTerminalSimpleExpressionAccess().getSetExpressionParserRuleCall_6()); }
	ruleSetExpression
{ after(grammarAccess.getTerminalSimpleExpressionAccess().getSetExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getTerminalSimpleExpressionAccess().getEAExpressionParserRuleCall_7()); }
	ruleEAExpression
{ after(grammarAccess.getTerminalSimpleExpressionAccess().getEAExpressionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getTerminalSimpleExpressionAccess().getBoolWordConvertExpressionParserRuleCall_8()); }
	ruleBoolWordConvertExpression
{ after(grammarAccess.getTerminalSimpleExpressionAccess().getBoolWordConvertExpressionParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EAExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEAExpressionAccess().getEKeyword_0_0()); }

	'E' 

{ after(grammarAccess.getEAExpressionAccess().getEKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getEAExpressionAccess().getAKeyword_0_1()); }

	'A' 

{ after(grammarAccess.getEAExpressionAccess().getAKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolWordConvertExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolWordConvertExpressionAccess().getWord1Keyword_0_0()); }

	'word1' 

{ after(grammarAccess.getBoolWordConvertExpressionAccess().getWord1Keyword_0_0()); }
)

    |(
{ before(grammarAccess.getBoolWordConvertExpressionAccess().getBoolKeyword_0_1()); }

	'bool' 

{ after(grammarAccess.getBoolWordConvertExpressionAccess().getBoolKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConstant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanConstantAccess().getTRUEKeyword_0()); }

	'TRUE' 

{ after(grammarAccess.getBooleanConstantAccess().getTRUEKeyword_0()); }
)

    |(
{ before(grammarAccess.getBooleanConstantAccess().getFALSEKeyword_1()); }

	'FALSE' 

{ after(grammarAccess.getBooleanConstantAccess().getFALSEKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorAccess().getUKeyword_0()); }

	'U' 

{ after(grammarAccess.getBinaryOperatorAccess().getUKeyword_0()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getVKeyword_1()); }

	'V' 

{ after(grammarAccess.getBinaryOperatorAccess().getVKeyword_1()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getSKeyword_2()); }

	'S' 

{ after(grammarAccess.getBinaryOperatorAccess().getSKeyword_2()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getTKeyword_3()); }

	'T' 

{ after(grammarAccess.getBinaryOperatorAccess().getTKeyword_3()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getHyphenMinusGreaterThanSignKeyword_4()); }

	'->' 

{ after(grammarAccess.getBinaryOperatorAccess().getHyphenMinusGreaterThanSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_5()); }

	'<->' 

{ after(grammarAccess.getBinaryOperatorAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getAmpersandKeyword_6()); }

	'&' 

{ after(grammarAccess.getBinaryOperatorAccess().getAmpersandKeyword_6()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getVerticalLineKeyword_7()); }

	'|' 

{ after(grammarAccess.getBinaryOperatorAccess().getVerticalLineKeyword_7()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getXorKeyword_8()); }

	'xor' 

{ after(grammarAccess.getBinaryOperatorAccess().getXorKeyword_8()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getXnorKeyword_9()); }

	'xnor' 

{ after(grammarAccess.getBinaryOperatorAccess().getXnorKeyword_9()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getEqualsSignKeyword_10()); }

	'=' 

{ after(grammarAccess.getBinaryOperatorAccess().getEqualsSignKeyword_10()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getExclamationMarkEqualsSignKeyword_11()); }

	'!=' 

{ after(grammarAccess.getBinaryOperatorAccess().getExclamationMarkEqualsSignKeyword_11()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getLessThanSignKeyword_12()); }

	'<' 

{ after(grammarAccess.getBinaryOperatorAccess().getLessThanSignKeyword_12()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getGreaterThanSignKeyword_13()); }

	'>' 

{ after(grammarAccess.getBinaryOperatorAccess().getGreaterThanSignKeyword_13()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getLessThanSignEqualsSignKeyword_14()); }

	'<=' 

{ after(grammarAccess.getBinaryOperatorAccess().getLessThanSignEqualsSignKeyword_14()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getGreaterThanSignEqualsSignKeyword_15()); }

	'>=' 

{ after(grammarAccess.getBinaryOperatorAccess().getGreaterThanSignEqualsSignKeyword_15()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getPlusSignKeyword_16()); }

	'+' 

{ after(grammarAccess.getBinaryOperatorAccess().getPlusSignKeyword_16()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getHyphenMinusKeyword_17()); }

	'-' 

{ after(grammarAccess.getBinaryOperatorAccess().getHyphenMinusKeyword_17()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getAsteriskKeyword_18()); }

	'*' 

{ after(grammarAccess.getBinaryOperatorAccess().getAsteriskKeyword_18()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getSolidusKeyword_19()); }

	'/' 

{ after(grammarAccess.getBinaryOperatorAccess().getSolidusKeyword_19()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getColonColonKeyword_20()); }

	'::' 

{ after(grammarAccess.getBinaryOperatorAccess().getColonColonKeyword_20()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getLessThanSignLessThanSignKeyword_21()); }

	'<<' 

{ after(grammarAccess.getBinaryOperatorAccess().getLessThanSignLessThanSignKeyword_21()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_22()); }

	'>>' 

{ after(grammarAccess.getBinaryOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_22()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getUnionKeyword_23()); }

	'union' 

{ after(grammarAccess.getBinaryOperatorAccess().getUnionKeyword_23()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getInKeyword_24()); }

	'in' 

{ after(grammarAccess.getBinaryOperatorAccess().getInKeyword_24()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getModKeyword_25()); }

	'mod' 

{ after(grammarAccess.getBinaryOperatorAccess().getModKeyword_25()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_0()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_2()); }

	'+' 

{ after(grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getXKeyword_3()); }

	'X' 

{ after(grammarAccess.getUnaryOperatorAccess().getXKeyword_3()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getGKeyword_4()); }

	'G' 

{ after(grammarAccess.getUnaryOperatorAccess().getGKeyword_4()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getFKeyword_5()); }

	'F' 

{ after(grammarAccess.getUnaryOperatorAccess().getFKeyword_5()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getYKeyword_6()); }

	'Y' 

{ after(grammarAccess.getUnaryOperatorAccess().getYKeyword_6()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getZKeyword_7()); }

	'Z' 

{ after(grammarAccess.getUnaryOperatorAccess().getZKeyword_7()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getHKeyword_8()); }

	'H' 

{ after(grammarAccess.getUnaryOperatorAccess().getHKeyword_8()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getOKeyword_9()); }

	'O' 

{ after(grammarAccess.getUnaryOperatorAccess().getOKeyword_9()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getEGKeyword_10()); }

	'EG' 

{ after(grammarAccess.getUnaryOperatorAccess().getEGKeyword_10()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getEXKeyword_11()); }

	'EX' 

{ after(grammarAccess.getUnaryOperatorAccess().getEXKeyword_11()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getEFKeyword_12()); }

	'EF' 

{ after(grammarAccess.getUnaryOperatorAccess().getEFKeyword_12()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getAGKeyword_13()); }

	'AG' 

{ after(grammarAccess.getUnaryOperatorAccess().getAGKeyword_13()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getAXKeyword_14()); }

	'AX' 

{ after(grammarAccess.getUnaryOperatorAccess().getAXKeyword_14()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getAFKeyword_15()); }

	'AF' 

{ after(grammarAccess.getUnaryOperatorAccess().getAFKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Val__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getValAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValAccess().getNUMBERTerminalRuleCall_1()); }
	RULE_NUMBER
{ after(grammarAccess.getValAccess().getNUMBERTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValAccess().getBooleanConstantParserRuleCall_2()); }
	ruleBooleanConstant
{ after(grammarAccess.getValAccess().getBooleanConstantParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNUMBERTerminalRuleCall_0()); }
	RULE_NUMBER
{ after(grammarAccess.getLiteralAccess().getNUMBERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getSelfKeyword_1()); }

	'self' 

{ after(grammarAccess.getLiteralAccess().getSelfKeyword_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanConstantParserRuleCall_2()); }
	ruleBooleanConstant
{ after(grammarAccess.getLiteralAccess().getBooleanConstantParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getVariableIdentifierParserRuleCall_3()); }
	ruleVariableIdentifier
{ after(grammarAccess.getLiteralAccess().getVariableIdentifierParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getGroup_0()); }
(rule__VariableIdentifier__Group_0__0)
{ after(grammarAccess.getVariableIdentifierAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVariableIdentifierAccess().getGroup_1()); }
(rule__VariableIdentifier__Group_1__0)
{ after(grammarAccess.getVariableIdentifierAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getVariableIdentifierAccess().getGroup_2()); }
(rule__VariableIdentifier__Group_2__0)
{ after(grammarAccess.getVariableIdentifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Alternatives_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getNUMBERTerminalRuleCall_1_2_1_0()); }
	RULE_NUMBER
{ after(grammarAccess.getVariableIdentifierAccess().getNUMBERTerminalRuleCall_1_2_1_0()); }
)

    |(
{ before(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_1_2_1_1()); }
	RULE_ID
{ after(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getMODULEKeyword_0()); }

	'MODULE' 

{ after(grammarAccess.getModuleAccess().getMODULEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getAlternatives_1()); }
(rule__Module__Alternatives_1)
{ after(grammarAccess.getModuleAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleElementAssignment_2()); }
(rule__Module__ModuleElementAssignment_2)*
{ after(grammarAccess.getModuleAccess().getModuleElementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OtherModule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherModule__Group__0__Impl
	rule__OtherModule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getNameAssignment_0()); }
(rule__OtherModule__NameAssignment_0)
{ after(grammarAccess.getOtherModuleAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherModule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherModule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getGroup_1()); }
(rule__OtherModule__Group_1__0)?
{ after(grammarAccess.getOtherModuleAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OtherModule__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherModule__Group_1__0__Impl
	rule__OtherModule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getOtherModuleAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherModule__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherModule__Group_1__1__Impl
	rule__OtherModule__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getParamsAssignment_1_1()); }
(rule__OtherModule__ParamsAssignment_1_1)
{ after(grammarAccess.getOtherModuleAccess().getParamsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherModule__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherModule__Group_1__2__Impl
	rule__OtherModule__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getGroup_1_2()); }
(rule__OtherModule__Group_1_2__0)*
{ after(grammarAccess.getOtherModuleAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherModule__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherModule__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getOtherModuleAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OtherModule__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherModule__Group_1_2__0__Impl
	rule__OtherModule__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getOtherModuleAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherModule__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherModule__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getParamsAssignment_1_2_1()); }
(rule__OtherModule__ParamsAssignment_1_2_1)
{ after(grammarAccess.getOtherModuleAccess().getParamsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVARKeyword_0()); }

	'VAR' 

{ after(grammarAccess.getVariableDeclarationAccess().getVARKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariableDeclarationAccess().getVarsAssignment_1()); }
(rule__VariableDeclaration__VarsAssignment_1)
{ after(grammarAccess.getVariableDeclarationAccess().getVarsAssignment_1()); }
)
(
{ before(grammarAccess.getVariableDeclarationAccess().getVarsAssignment_1()); }
(rule__VariableDeclaration__VarsAssignment_1)*
{ after(grammarAccess.getVariableDeclarationAccess().getVarsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariableDeclaration__Group__0__Impl
	rule__IVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableDeclarationAccess().getIVARKeyword_0()); }

	'IVAR' 

{ after(grammarAccess.getIVariableDeclarationAccess().getIVARKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIVariableDeclarationAccess().getVarsAssignment_1()); }
(rule__IVariableDeclaration__VarsAssignment_1)
{ after(grammarAccess.getIVariableDeclarationAccess().getVarsAssignment_1()); }
)
(
{ before(grammarAccess.getIVariableDeclarationAccess().getVarsAssignment_1()); }
(rule__IVariableDeclaration__VarsAssignment_1)*
{ after(grammarAccess.getIVariableDeclarationAccess().getVarsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FrozenVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FrozenVariableDeclaration__Group__0__Impl
	rule__FrozenVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FrozenVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFrozenVariableDeclarationAccess().getFROZENVARKeyword_0()); }

	'FROZENVAR' 

{ after(grammarAccess.getFrozenVariableDeclarationAccess().getFROZENVARKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FrozenVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FrozenVariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FrozenVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFrozenVariableDeclarationAccess().getVarsAssignment_1()); }
(rule__FrozenVariableDeclaration__VarsAssignment_1)
{ after(grammarAccess.getFrozenVariableDeclarationAccess().getVarsAssignment_1()); }
)
(
{ before(grammarAccess.getFrozenVariableDeclarationAccess().getVarsAssignment_1()); }
(rule__FrozenVariableDeclaration__VarsAssignment_1)*
{ after(grammarAccess.getFrozenVariableDeclarationAccess().getVarsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBody__Group__0__Impl
	rule__VarBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAccess().getVarIdAssignment_0()); }
(rule__VarBody__VarIdAssignment_0)
{ after(grammarAccess.getVarBodyAccess().getVarIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBody__Group__1__Impl
	rule__VarBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getVarBodyAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBody__Group__2__Impl
	rule__VarBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAccess().getTypeAssignment_2()); }
(rule__VarBody__TypeAssignment_2)
{ after(grammarAccess.getVarBodyAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getVarBodyAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefineDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineDeclaration__Group__0__Impl
	rule__DefineDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineDeclarationAccess().getDEFINEKeyword_0()); }

	'DEFINE' 

{ after(grammarAccess.getDefineDeclarationAccess().getDEFINEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDefineDeclarationAccess().getDefineBodiesAssignment_1()); }
(rule__DefineDeclaration__DefineBodiesAssignment_1)
{ after(grammarAccess.getDefineDeclarationAccess().getDefineBodiesAssignment_1()); }
)
(
{ before(grammarAccess.getDefineDeclarationAccess().getDefineBodiesAssignment_1()); }
(rule__DefineDeclaration__DefineBodiesAssignment_1)*
{ after(grammarAccess.getDefineDeclarationAccess().getDefineBodiesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefineBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineBody__Group__0__Impl
	rule__DefineBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineBodyAccess().getVarIdAssignment_0()); }
(rule__DefineBody__VarIdAssignment_0)
{ after(grammarAccess.getDefineBodyAccess().getVarIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineBody__Group__1__Impl
	rule__DefineBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineBodyAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getDefineBodyAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineBody__Group__2__Impl
	rule__DefineBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineBodyAccess().getAssignmentAssignment_2()); }
(rule__DefineBody__AssignmentAssignment_2)
{ after(grammarAccess.getDefineBodyAccess().getAssignmentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineBodyAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getDefineBodyAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstantsDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantsDeclaration__Group__0__Impl
	rule__ConstantsDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantsDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantsDeclarationAccess().getCONSTANTSKeyword_0()); }

	'CONSTANTS' 

{ after(grammarAccess.getConstantsDeclarationAccess().getCONSTANTSKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantsDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantsDeclaration__Group__1__Impl
	rule__ConstantsDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantsDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantsDeclarationAccess().getConstantsAssignment_1()); }
(rule__ConstantsDeclaration__ConstantsAssignment_1)
{ after(grammarAccess.getConstantsDeclarationAccess().getConstantsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantsDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantsDeclaration__Group__2__Impl
	rule__ConstantsDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantsDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantsDeclarationAccess().getGroup_2()); }
(rule__ConstantsDeclaration__Group_2__0)*
{ after(grammarAccess.getConstantsDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantsDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantsDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantsDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantsDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getConstantsDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstantsDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantsDeclaration__Group_2__0__Impl
	rule__ConstantsDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantsDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantsDeclarationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getConstantsDeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantsDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantsDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantsDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantsDeclarationAccess().getConstantsAssignment_2_1()); }
(rule__ConstantsDeclaration__ConstantsAssignment_2_1)
{ after(grammarAccess.getConstantsDeclarationAccess().getConstantsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignConstraint__Group__0__Impl
	rule__AssignConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignConstraintAccess().getASSIGNKeyword_0()); }

	'ASSIGN' 

{ after(grammarAccess.getAssignConstraintAccess().getASSIGNKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignConstraint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAssignConstraintAccess().getBodiesAssignment_1()); }
(rule__AssignConstraint__BodiesAssignment_1)
{ after(grammarAccess.getAssignConstraintAccess().getBodiesAssignment_1()); }
)
(
{ before(grammarAccess.getAssignConstraintAccess().getBodiesAssignment_1()); }
(rule__AssignConstraint__BodiesAssignment_1)*
{ after(grammarAccess.getAssignConstraintAccess().getBodiesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarBodyAssign__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBodyAssign__Group__0__Impl
	rule__VarBodyAssign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBodyAssign__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAssignAccess().getVarIdAssignment_0()); }
(rule__VarBodyAssign__VarIdAssignment_0)
{ after(grammarAccess.getVarBodyAssignAccess().getVarIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBodyAssign__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBodyAssign__Group__1__Impl
	rule__VarBodyAssign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBodyAssign__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAssignAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getVarBodyAssignAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBodyAssign__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBodyAssign__Group__2__Impl
	rule__VarBodyAssign__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBodyAssign__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAssignAccess().getAssignmentAssignment_2()); }
(rule__VarBodyAssign__AssignmentAssignment_2)
{ after(grammarAccess.getVarBodyAssignAccess().getAssignmentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBodyAssign__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBodyAssign__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBodyAssign__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAssignAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getVarBodyAssignAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InitBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBody__Group__0__Impl
	rule__InitBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBodyAccess().getInitKeyword_0()); }

	'init' 

{ after(grammarAccess.getInitBodyAccess().getInitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBody__Group__1__Impl
	rule__InitBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBodyAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getInitBodyAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBody__Group__2__Impl
	rule__InitBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBodyAccess().getVarIdAssignment_2()); }
(rule__InitBody__VarIdAssignment_2)
{ after(grammarAccess.getInitBodyAccess().getVarIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBody__Group__3__Impl
	rule__InitBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBodyAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getInitBodyAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBody__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBody__Group__4__Impl
	rule__InitBody__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBody__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBodyAccess().getColonEqualsSignKeyword_4()); }

	':=' 

{ after(grammarAccess.getInitBodyAccess().getColonEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBody__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBody__Group__5__Impl
	rule__InitBody__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBody__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBodyAccess().getInitExprAssignment_5()); }
(rule__InitBody__InitExprAssignment_5)
{ after(grammarAccess.getInitBodyAccess().getInitExprAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBody__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBody__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBody__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBodyAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getInitBodyAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__NextBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextBody__Group__0__Impl
	rule__NextBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NextBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextBodyAccess().getNextKeyword_0()); }

	'next' 

{ after(grammarAccess.getNextBodyAccess().getNextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextBody__Group__1__Impl
	rule__NextBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NextBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextBodyAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getNextBodyAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextBody__Group__2__Impl
	rule__NextBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NextBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextBodyAccess().getVarIdAssignment_2()); }
(rule__NextBody__VarIdAssignment_2)
{ after(grammarAccess.getNextBodyAccess().getVarIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextBody__Group__3__Impl
	rule__NextBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NextBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextBodyAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getNextBodyAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextBody__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextBody__Group__4__Impl
	rule__NextBody__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NextBody__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextBodyAccess().getColonEqualsSignKeyword_4()); }

	':=' 

{ after(grammarAccess.getNextBodyAccess().getColonEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextBody__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextBody__Group__5__Impl
	rule__NextBody__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NextBody__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextBodyAccess().getNextExprAssignment_5()); }
(rule__NextBody__NextExprAssignment_5)
{ after(grammarAccess.getNextBodyAccess().getNextExprAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextBody__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextBody__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NextBody__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextBodyAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getNextBodyAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TransConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransConstraint__Group__0__Impl
	rule__TransConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransConstraintAccess().getTRANSKeyword_0()); }

	'TRANS' 

{ after(grammarAccess.getTransConstraintAccess().getTRANSKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransConstraint__Group__1__Impl
	rule__TransConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransConstraintAccess().getTransExprAssignment_1()); }
(rule__TransConstraint__TransExprAssignment_1)
{ after(grammarAccess.getTransConstraintAccess().getTransExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransConstraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransConstraintAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getTransConstraintAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InitConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitConstraint__Group__0__Impl
	rule__InitConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitConstraintAccess().getINITKeyword_0()); }

	'INIT' 

{ after(grammarAccess.getInitConstraintAccess().getINITKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitConstraint__Group__1__Impl
	rule__InitConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitConstraintAccess().getInitExprAssignment_1()); }
(rule__InitConstraint__InitExprAssignment_1)
{ after(grammarAccess.getInitConstraintAccess().getInitExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitConstraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitConstraintAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getInitConstraintAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InvarConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InvarConstraint__Group__0__Impl
	rule__InvarConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvarConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarConstraintAccess().getINVARKeyword_0()); }

	'INVAR' 

{ after(grammarAccess.getInvarConstraintAccess().getINVARKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InvarConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InvarConstraint__Group__1__Impl
	rule__InvarConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InvarConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarConstraintAccess().getInvarExprAssignment_1()); }
(rule__InvarConstraint__InvarExprAssignment_1)
{ after(grammarAccess.getInvarConstraintAccess().getInvarExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InvarConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InvarConstraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvarConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarConstraintAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getInvarConstraintAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FairnessExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FairnessExpression__Group__0__Impl
	rule__FairnessExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FairnessExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFairnessExpressionAccess().getFAIRNESSKeyword_0()); }

	'FAIRNESS' 

{ after(grammarAccess.getFairnessExpressionAccess().getFAIRNESSKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FairnessExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FairnessExpression__Group__1__Impl
	rule__FairnessExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FairnessExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFairnessExpressionAccess().getFairnessExprAssignment_1()); }
(rule__FairnessExpression__FairnessExprAssignment_1)
{ after(grammarAccess.getFairnessExpressionAccess().getFairnessExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FairnessExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FairnessExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FairnessExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFairnessExpressionAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getFairnessExpressionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JusticeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JusticeExpression__Group__0__Impl
	rule__JusticeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JusticeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJusticeExpressionAccess().getJUSTICEKeyword_0()); }

	'JUSTICE' 

{ after(grammarAccess.getJusticeExpressionAccess().getJUSTICEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JusticeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JusticeExpression__Group__1__Impl
	rule__JusticeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JusticeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJusticeExpressionAccess().getJusticeExprAssignment_1()); }
(rule__JusticeExpression__JusticeExprAssignment_1)
{ after(grammarAccess.getJusticeExpressionAccess().getJusticeExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JusticeExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JusticeExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JusticeExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJusticeExpressionAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getJusticeExpressionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CompassionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompassionExpression__Group__0__Impl
	rule__CompassionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompassionExpressionAccess().getCOMPASSIONKeyword_0()); }

	'COMPASSION (' 

{ after(grammarAccess.getCompassionExpressionAccess().getCOMPASSIONKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompassionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompassionExpression__Group__1__Impl
	rule__CompassionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompassionExpressionAccess().getFirstCompassionExprAssignment_1()); }
(rule__CompassionExpression__FirstCompassionExprAssignment_1)
{ after(grammarAccess.getCompassionExpressionAccess().getFirstCompassionExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompassionExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompassionExpression__Group__2__Impl
	rule__CompassionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompassionExpressionAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getCompassionExpressionAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompassionExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompassionExpression__Group__3__Impl
	rule__CompassionExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompassionExpressionAccess().getSecondCompassionExprAssignment_3()); }
(rule__CompassionExpression__SecondCompassionExprAssignment_3)
{ after(grammarAccess.getCompassionExpressionAccess().getSecondCompassionExprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompassionExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompassionExpression__Group__4__Impl
	rule__CompassionExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompassionExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getCompassionExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompassionExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompassionExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompassionExpressionAccess().getSemicolonKeyword_5()); }
(
	';' 
)?
{ after(grammarAccess.getCompassionExpressionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InvarSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InvarSpecification__Group__0__Impl
	rule__InvarSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvarSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarSpecificationAccess().getINVARSPECKeyword_0()); }

	'INVARSPEC' 

{ after(grammarAccess.getInvarSpecificationAccess().getINVARSPECKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InvarSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InvarSpecification__Group__1__Impl
	rule__InvarSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InvarSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarSpecificationAccess().getGroup_1()); }
(rule__InvarSpecification__Group_1__0)?
{ after(grammarAccess.getInvarSpecificationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InvarSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InvarSpecification__Group__2__Impl
	rule__InvarSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InvarSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarSpecificationAccess().getInvarExprAssignment_2()); }
(rule__InvarSpecification__InvarExprAssignment_2)
{ after(grammarAccess.getInvarSpecificationAccess().getInvarExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InvarSpecification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InvarSpecification__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvarSpecification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarSpecificationAccess().getSemicolonKeyword_3()); }
(
	';' 
)?
{ after(grammarAccess.getInvarSpecificationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InvarSpecification__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InvarSpecification__Group_1__0__Impl
	rule__InvarSpecification__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvarSpecification__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarSpecificationAccess().getNameAssignment_1_0()); }
(rule__InvarSpecification__NameAssignment_1_0)
{ after(grammarAccess.getInvarSpecificationAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InvarSpecification__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InvarSpecification__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvarSpecification__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarSpecificationAccess().getColonEqualsSignKeyword_1_1()); }

	':=' 

{ after(grammarAccess.getInvarSpecificationAccess().getColonEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CtlSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CtlSpecification__Group__0__Impl
	rule__CtlSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getAlternatives_0()); }
(rule__CtlSpecification__Alternatives_0)
{ after(grammarAccess.getCtlSpecificationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CtlSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CtlSpecification__Group__1__Impl
	rule__CtlSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getGroup_1()); }
(rule__CtlSpecification__Group_1__0)?
{ after(grammarAccess.getCtlSpecificationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CtlSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CtlSpecification__Group__2__Impl
	rule__CtlSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getCtlExprAssignment_2()); }
(rule__CtlSpecification__CtlExprAssignment_2)
{ after(grammarAccess.getCtlSpecificationAccess().getCtlExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CtlSpecification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CtlSpecification__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getSemicolonKeyword_3()); }
(
	';' 
)?
{ after(grammarAccess.getCtlSpecificationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CtlSpecification__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CtlSpecification__Group_1__0__Impl
	rule__CtlSpecification__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getNameKeyWordAssignment_1_0()); }
(rule__CtlSpecification__NameKeyWordAssignment_1_0)
{ after(grammarAccess.getCtlSpecificationAccess().getNameKeyWordAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CtlSpecification__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CtlSpecification__Group_1__1__Impl
	rule__CtlSpecification__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getNameAssignment_1_1()); }
(rule__CtlSpecification__NameAssignment_1_1)
{ after(grammarAccess.getCtlSpecificationAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CtlSpecification__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CtlSpecification__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getColonEqualsSignKeyword_1_2()); }

	':=' 

{ after(grammarAccess.getCtlSpecificationAccess().getColonEqualsSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LtlSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LtlSpecification__Group__0__Impl
	rule__LtlSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtlSpecificationAccess().getLTLSPECKeyword_0()); }

	'LTLSPEC' 

{ after(grammarAccess.getLtlSpecificationAccess().getLTLSPECKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LtlSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LtlSpecification__Group__1__Impl
	rule__LtlSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtlSpecificationAccess().getGroup_1()); }
(rule__LtlSpecification__Group_1__0)?
{ after(grammarAccess.getLtlSpecificationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LtlSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LtlSpecification__Group__2__Impl
	rule__LtlSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtlSpecificationAccess().getLtlExprAssignment_2()); }
(rule__LtlSpecification__LtlExprAssignment_2)
{ after(grammarAccess.getLtlSpecificationAccess().getLtlExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LtlSpecification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LtlSpecification__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpecification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtlSpecificationAccess().getSemicolonKeyword_3()); }
(
	';' 
)?
{ after(grammarAccess.getLtlSpecificationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LtlSpecification__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LtlSpecification__Group_1__0__Impl
	rule__LtlSpecification__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpecification__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtlSpecificationAccess().getNameIdAssignment_1_0()); }
(rule__LtlSpecification__NameIdAssignment_1_0)
{ after(grammarAccess.getLtlSpecificationAccess().getNameIdAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LtlSpecification__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LtlSpecification__Group_1__1__Impl
	rule__LtlSpecification__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpecification__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtlSpecificationAccess().getNameAssignment_1_1()); }
(rule__LtlSpecification__NameAssignment_1_1)
{ after(grammarAccess.getLtlSpecificationAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LtlSpecification__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LtlSpecification__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpecification__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtlSpecificationAccess().getColonEqualsSignKeyword_1_2()); }

	':=' 

{ after(grammarAccess.getLtlSpecificationAccess().getColonEqualsSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_0__0__Impl
	rule__SimpleType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getBooleanTypeAction_0_0()); }
(

)
{ after(grammarAccess.getSimpleTypeAccess().getBooleanTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getBooleanKeyword_0_1()); }

	'boolean' 

{ after(grammarAccess.getSimpleTypeAccess().getBooleanKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_1__0__Impl
	rule__SimpleType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getWordTypeAction_1_0()); }
(

)
{ after(grammarAccess.getSimpleTypeAccess().getWordTypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_1_1()); }
(rule__SimpleType__Group_1_1__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleType__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_1_1__0__Impl
	rule__SimpleType__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getWordKeyword_1_1_0()); }

	'word' 

{ after(grammarAccess.getSimpleTypeAccess().getWordKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_1_1__1__Impl
	rule__SimpleType__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getLeftSquareBracketKeyword_1_1_1()); }

	'[' 

{ after(grammarAccess.getSimpleTypeAccess().getLeftSquareBracketKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_1_1__2__Impl
	rule__SimpleType__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getWordNumberAssignment_1_1_2()); }
(rule__SimpleType__WordNumberAssignment_1_1_2)
{ after(grammarAccess.getSimpleTypeAccess().getWordNumberAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getRightSquareBracketKeyword_1_1_3()); }

	']' 

{ after(grammarAccess.getSimpleTypeAccess().getRightSquareBracketKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SimpleType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_2__0__Impl
	rule__SimpleType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getUnsignedWordTypeAction_2_0()); }
(

)
{ after(grammarAccess.getSimpleTypeAccess().getUnsignedWordTypeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_2_1()); }
(rule__SimpleType__Group_2_1__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleType__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_2_1__0__Impl
	rule__SimpleType__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getUnsignedKeyword_2_1_0()); }

	'unsigned' 

{ after(grammarAccess.getSimpleTypeAccess().getUnsignedKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_2_1__1__Impl
	rule__SimpleType__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getWordKeyword_2_1_1()); }

	'word' 

{ after(grammarAccess.getSimpleTypeAccess().getWordKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_2_1__2__Impl
	rule__SimpleType__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getLeftSquareBracketKeyword_2_1_2()); }

	'[' 

{ after(grammarAccess.getSimpleTypeAccess().getLeftSquareBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_2_1__3__Impl
	rule__SimpleType__Group_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getUWordNumberAssignment_2_1_3()); }
(rule__SimpleType__UWordNumberAssignment_2_1_3)
{ after(grammarAccess.getSimpleTypeAccess().getUWordNumberAssignment_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_2_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_2_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_2_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getRightSquareBracketKeyword_2_1_4()); }

	']' 

{ after(grammarAccess.getSimpleTypeAccess().getRightSquareBracketKeyword_2_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SimpleType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_3__0__Impl
	rule__SimpleType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getSignedWordTypeAction_3_0()); }
(

)
{ after(grammarAccess.getSimpleTypeAccess().getSignedWordTypeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_3_1()); }
(rule__SimpleType__Group_3_1__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleType__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_3_1__0__Impl
	rule__SimpleType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getSignedWordKeyword_3_1_0()); }

	'signed word' 

{ after(grammarAccess.getSimpleTypeAccess().getSignedWordKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_3_1__1__Impl
	rule__SimpleType__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getLeftSquareBracketKeyword_3_1_1()); }

	'[' 

{ after(grammarAccess.getSimpleTypeAccess().getLeftSquareBracketKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_3_1__2__Impl
	rule__SimpleType__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getSignedNumberAssignment_3_1_2()); }
(rule__SimpleType__SignedNumberAssignment_3_1_2)
{ after(grammarAccess.getSimpleTypeAccess().getSignedNumberAssignment_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_3_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getRightSquareBracketKeyword_3_1_3()); }

	']' 

{ after(grammarAccess.getSimpleTypeAccess().getRightSquareBracketKeyword_3_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SimpleType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_4__0__Impl
	rule__SimpleType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getEnumTypeAction_4_0()); }
(

)
{ after(grammarAccess.getSimpleTypeAccess().getEnumTypeAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_4__1__Impl
	rule__SimpleType__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getLeftCurlyBracketKeyword_4_1()); }

	'{' 

{ after(grammarAccess.getSimpleTypeAccess().getLeftCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_4__2__Impl
	rule__SimpleType__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getValueAssignment_4_2()); }
(rule__SimpleType__ValueAssignment_4_2)
{ after(grammarAccess.getSimpleTypeAccess().getValueAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_4__3__Impl
	rule__SimpleType__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_4_3()); }
(rule__SimpleType__Group_4_3__0)*
{ after(grammarAccess.getSimpleTypeAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getRightCurlyBracketKeyword_4_4()); }

	'}' 

{ after(grammarAccess.getSimpleTypeAccess().getRightCurlyBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SimpleType__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_4_3__0__Impl
	rule__SimpleType__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getSimpleTypeAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getValueAssignment_4_3_1()); }
(rule__SimpleType__ValueAssignment_4_3_1)
{ after(grammarAccess.getSimpleTypeAccess().getValueAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_5__0__Impl
	rule__SimpleType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getRangeTypeAction_5_0()); }
(

)
{ after(grammarAccess.getSimpleTypeAccess().getRangeTypeAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_5__1__Impl
	rule__SimpleType__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getLowAssignment_5_1()); }
(rule__SimpleType__LowAssignment_5_1)
{ after(grammarAccess.getSimpleTypeAccess().getLowAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_5__2__Impl
	rule__SimpleType__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getFullStopFullStopKeyword_5_2()); }

	'..' 

{ after(grammarAccess.getSimpleTypeAccess().getFullStopFullStopKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getHighAssignment_5_3()); }
(rule__SimpleType__HighAssignment_5_3)
{ after(grammarAccess.getSimpleTypeAccess().getHighAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SimpleType__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_6__0__Impl
	rule__SimpleType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getArrayTypeAction_6_0()); }
(

)
{ after(grammarAccess.getSimpleTypeAccess().getArrayTypeAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_6__1__Impl
	rule__SimpleType__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getArrayKeyword_6_1()); }

	'array' 

{ after(grammarAccess.getSimpleTypeAccess().getArrayKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_6__2__Impl
	rule__SimpleType__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getBoundsAssignment_6_2()); }
(rule__SimpleType__BoundsAssignment_6_2)
{ after(grammarAccess.getSimpleTypeAccess().getBoundsAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_6__3__Impl
	rule__SimpleType__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getOfKeyword_6_3()); }

	'of' 

{ after(grammarAccess.getSimpleTypeAccess().getOfKeyword_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getTypeAssignment_6_4()); }
(rule__SimpleType__TypeAssignment_6_4)
{ after(grammarAccess.getSimpleTypeAccess().getTypeAssignment_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ModuleType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0__0__Impl
	rule__ModuleType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getAsyncrProcessTypeAction_0_0()); }
(

)
{ after(grammarAccess.getModuleTypeAccess().getAsyncrProcessTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getGroup_0_1()); }
(rule__ModuleType__Group_0_1__0)
{ after(grammarAccess.getModuleTypeAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuleType__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0_1__0__Impl
	rule__ModuleType__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getProcessKeyword_0_1_0()); }

	'process' 

{ after(grammarAccess.getModuleTypeAccess().getProcessKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0_1__1__Impl
	rule__ModuleType__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getModuleAssignment_0_1_1()); }
(rule__ModuleType__ModuleAssignment_0_1_1)
{ after(grammarAccess.getModuleTypeAccess().getModuleAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getGroup_0_1_2()); }
(rule__ModuleType__Group_0_1_2__0)?
{ after(grammarAccess.getModuleTypeAccess().getGroup_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModuleType__Group_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0_1_2__0__Impl
	rule__ModuleType__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getLeftParenthesisKeyword_0_1_2_0()); }

	'(' 

{ after(grammarAccess.getModuleTypeAccess().getLeftParenthesisKeyword_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0_1_2__1__Impl
	rule__ModuleType__Group_0_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getParamsAssignment_0_1_2_1()); }
(rule__ModuleType__ParamsAssignment_0_1_2_1)
{ after(grammarAccess.getModuleTypeAccess().getParamsAssignment_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_0_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0_1_2__2__Impl
	rule__ModuleType__Group_0_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getGroup_0_1_2_2()); }
(rule__ModuleType__Group_0_1_2_2__0)*
{ after(grammarAccess.getModuleTypeAccess().getGroup_0_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_0_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getRightParenthesisKeyword_0_1_2_3()); }

	')' 

{ after(grammarAccess.getModuleTypeAccess().getRightParenthesisKeyword_0_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ModuleType__Group_0_1_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0_1_2_2__0__Impl
	rule__ModuleType__Group_0_1_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0_1_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getCommaKeyword_0_1_2_2_0()); }

	',' 

{ after(grammarAccess.getModuleTypeAccess().getCommaKeyword_0_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_0_1_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_0_1_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_0_1_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getParamsAssignment_0_1_2_2_1()); }
(rule__ModuleType__ParamsAssignment_0_1_2_2_1)
{ after(grammarAccess.getModuleTypeAccess().getParamsAssignment_0_1_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuleType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_1__0__Impl
	rule__ModuleType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getSyncrProcessTypeAction_1_0()); }
(

)
{ after(grammarAccess.getModuleTypeAccess().getSyncrProcessTypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getGroup_1_1()); }
(rule__ModuleType__Group_1_1__0)
{ after(grammarAccess.getModuleTypeAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuleType__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_1_1__0__Impl
	rule__ModuleType__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getModuleAssignment_1_1_0()); }
(rule__ModuleType__ModuleAssignment_1_1_0)
{ after(grammarAccess.getModuleTypeAccess().getModuleAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getGroup_1_1_1()); }
(rule__ModuleType__Group_1_1_1__0)?
{ after(grammarAccess.getModuleTypeAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuleType__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_1_1_1__0__Impl
	rule__ModuleType__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getLeftParenthesisKeyword_1_1_1_0()); }

	'(' 

{ after(grammarAccess.getModuleTypeAccess().getLeftParenthesisKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_1_1_1__1__Impl
	rule__ModuleType__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getParamsAssignment_1_1_1_1()); }
(rule__ModuleType__ParamsAssignment_1_1_1_1)
{ after(grammarAccess.getModuleTypeAccess().getParamsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_1_1_1__2__Impl
	rule__ModuleType__Group_1_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getGroup_1_1_1_2()); }
(rule__ModuleType__Group_1_1_1_2__0)*
{ after(grammarAccess.getModuleTypeAccess().getGroup_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_1_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_1_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_1_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getRightParenthesisKeyword_1_1_1_3()); }

	')' 

{ after(grammarAccess.getModuleTypeAccess().getRightParenthesisKeyword_1_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ModuleType__Group_1_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_1_1_1_2__0__Impl
	rule__ModuleType__Group_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_1_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getCommaKeyword_1_1_1_2_0()); }

	',' 

{ after(grammarAccess.getModuleTypeAccess().getCommaKeyword_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleType__Group_1_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleType__Group_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__Group_1_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getParamsAssignment_1_1_1_2_1()); }
(rule__ModuleType__ParamsAssignment_1_1_1_2_1)
{ after(grammarAccess.getModuleTypeAccess().getParamsAssignment_1_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BinaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpression__Group__0__Impl
	rule__BinaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getTerminalSimpleExpressionParserRuleCall_0()); }
	ruleTerminalSimpleExpression
{ after(grammarAccess.getBinaryExpressionAccess().getTerminalSimpleExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getGroup_1()); }
(rule__BinaryExpression__Group_1__0)*
{ after(grammarAccess.getBinaryExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BinaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpression__Group_1__0__Impl
	rule__BinaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getBinaryOperatorParserRuleCall_1_0()); }
	ruleBinaryOperator
{ after(grammarAccess.getBinaryExpressionAccess().getBinaryOperatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getTerminalSimpleExpressionParserRuleCall_1_1()); }
	ruleTerminalSimpleExpression
{ after(grammarAccess.getBinaryExpressionAccess().getTerminalSimpleExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NextExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextExpression__Group__0__Impl
	rule__NextExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NextExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextExpressionAccess().getNextKeyword_0()); }

	'next' 

{ after(grammarAccess.getNextExpressionAccess().getNextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextExpression__Group__1__Impl
	rule__NextExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NextExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getNextExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextExpression__Group__2__Impl
	rule__NextExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NextExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextExpressionAccess().getSimpleExpressionParserRuleCall_2()); }
	ruleSimpleExpression
{ after(grammarAccess.getNextExpressionAccess().getSimpleExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NextExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getNextExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BracketExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BracketExpression__Group__0__Impl
	rule__BracketExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getBracketExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BracketExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BracketExpression__Group__1__Impl
	rule__BracketExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketExpressionAccess().getSimpleExpressionParserRuleCall_1()); }
	ruleSimpleExpression
{ after(grammarAccess.getBracketExpressionAccess().getSimpleExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BracketExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BracketExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getBracketExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryOperatorParserRuleCall_0()); }
	ruleUnaryOperator
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryOperatorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getSimpleExpressionParserRuleCall_1()); }
	ruleSimpleExpression
{ after(grammarAccess.getUnaryExpressionAccess().getSimpleExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CaseExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group__0__Impl
	rule__CaseExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getCaseExpressionAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group__1__Impl
	rule__CaseExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCaseExpressionAccess().getGroup_1()); }
(rule__CaseExpression__Group_1__0)
{ after(grammarAccess.getCaseExpressionAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getCaseExpressionAccess().getGroup_1()); }
(rule__CaseExpression__Group_1__0)*
{ after(grammarAccess.getCaseExpressionAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getEsacKeyword_2()); }

	'esac' 

{ after(grammarAccess.getCaseExpressionAccess().getEsacKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CaseExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group_1__0__Impl
	rule__CaseExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getSimpleExpressionParserRuleCall_1_0()); }
	ruleSimpleExpression
{ after(grammarAccess.getCaseExpressionAccess().getSimpleExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group_1__1__Impl
	rule__CaseExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getCaseExpressionAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group_1__2__Impl
	rule__CaseExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getSimpleExpressionParserRuleCall_1_2()); }
	ruleSimpleExpression
{ after(grammarAccess.getCaseExpressionAccess().getSimpleExpressionParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getSemicolonKeyword_1_3()); }

	';' 

{ after(grammarAccess.getCaseExpressionAccess().getSemicolonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SetExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetExpression__Group__0__Impl
	rule__SetExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getSetExpressionAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetExpression__Group__1__Impl
	rule__SetExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getSimpleExpressionParserRuleCall_1()); }
	ruleSimpleExpression
{ after(grammarAccess.getSetExpressionAccess().getSimpleExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetExpression__Group__2__Impl
	rule__SetExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getGroup_2()); }
(rule__SetExpression__Group_2__0)*
{ after(grammarAccess.getSetExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getSetExpressionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SetExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetExpression__Group_2__0__Impl
	rule__SetExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getSetExpressionAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetExpressionAccess().getSimpleExpressionParserRuleCall_2_1()); }
	ruleSimpleExpression
{ after(grammarAccess.getSetExpressionAccess().getSimpleExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EAExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EAExpression__Group__0__Impl
	rule__EAExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEAExpressionAccess().getAlternatives_0()); }
(rule__EAExpression__Alternatives_0)
{ after(grammarAccess.getEAExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EAExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EAExpression__Group__1__Impl
	rule__EAExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EAExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEAExpressionAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getEAExpressionAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EAExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EAExpression__Group__2__Impl
	rule__EAExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EAExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEAExpressionAccess().getSimpleExpressionParserRuleCall_2()); }
	ruleSimpleExpression
{ after(grammarAccess.getEAExpressionAccess().getSimpleExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EAExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EAExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEAExpressionAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getEAExpressionAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BoolWordConvertExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolWordConvertExpression__Group__0__Impl
	rule__BoolWordConvertExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolWordConvertExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolWordConvertExpressionAccess().getAlternatives_0()); }
(rule__BoolWordConvertExpression__Alternatives_0)
{ after(grammarAccess.getBoolWordConvertExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolWordConvertExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolWordConvertExpression__Group__1__Impl
	rule__BoolWordConvertExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolWordConvertExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolWordConvertExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getBoolWordConvertExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolWordConvertExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolWordConvertExpression__Group__2__Impl
	rule__BoolWordConvertExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolWordConvertExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolWordConvertExpressionAccess().getSimpleExpressionParserRuleCall_2()); }
	ruleSimpleExpression
{ after(grammarAccess.getBoolWordConvertExpressionAccess().getSimpleExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolWordConvertExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolWordConvertExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolWordConvertExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolWordConvertExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getBoolWordConvertExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Range__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getNUMBERTerminalRuleCall_0()); }
	RULE_NUMBER
{ after(grammarAccess.getRangeAccess().getNUMBERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getFullStopFullStopKeyword_1()); }

	'..' 

{ after(grammarAccess.getRangeAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getNUMBERTerminalRuleCall_2()); }
	RULE_NUMBER
{ after(grammarAccess.getRangeAccess().getNUMBERTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableIdentifier__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_0__0__Impl
	rule__VariableIdentifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getGroup_0_1()); }
(rule__VariableIdentifier__Group_0_1__0)*
{ after(grammarAccess.getVariableIdentifierAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableIdentifier__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_0_1__0__Impl
	rule__VariableIdentifier__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getFullStopKeyword_0_1_0()); }

	'.' 

{ after(grammarAccess.getVariableIdentifierAccess().getFullStopKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_0_1_1()); }
	RULE_ID
{ after(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableIdentifier__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_1__0__Impl
	rule__VariableIdentifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_1__1__Impl
	rule__VariableIdentifier__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getGroup_1_1()); }
(rule__VariableIdentifier__Group_1_1__0)*
{ after(grammarAccess.getVariableIdentifierAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariableIdentifierAccess().getGroup_1_2()); }
(rule__VariableIdentifier__Group_1_2__0)
{ after(grammarAccess.getVariableIdentifierAccess().getGroup_1_2()); }
)
(
{ before(grammarAccess.getVariableIdentifierAccess().getGroup_1_2()); }
(rule__VariableIdentifier__Group_1_2__0)*
{ after(grammarAccess.getVariableIdentifierAccess().getGroup_1_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableIdentifier__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_1_1__0__Impl
	rule__VariableIdentifier__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getVariableIdentifierAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_1_1_1()); }
	RULE_ID
{ after(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableIdentifier__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_1_2__0__Impl
	rule__VariableIdentifier__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getLeftSquareBracketKeyword_1_2_0()); }

	'[' 

{ after(grammarAccess.getVariableIdentifierAccess().getLeftSquareBracketKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_1_2__1__Impl
	rule__VariableIdentifier__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getAlternatives_1_2_1()); }
(rule__VariableIdentifier__Alternatives_1_2_1)
{ after(grammarAccess.getVariableIdentifierAccess().getAlternatives_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getRightSquareBracketKeyword_1_2_2()); }

	']' 

{ after(grammarAccess.getVariableIdentifierAccess().getRightSquareBracketKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableIdentifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_2__0__Impl
	rule__VariableIdentifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_2_0()); }
	RULE_ID
{ after(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_2__1__Impl
	rule__VariableIdentifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getGroup_2_1()); }
(rule__VariableIdentifier__Group_2_1__0)*
{ after(grammarAccess.getVariableIdentifierAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_2__2__Impl
	rule__VariableIdentifier__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getLeftSquareBracketKeyword_2_2()); }

	'[' 

{ after(grammarAccess.getVariableIdentifierAccess().getLeftSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_2__3__Impl
	rule__VariableIdentifier__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getNUMBERTerminalRuleCall_2_3()); }
	RULE_NUMBER
{ after(grammarAccess.getVariableIdentifierAccess().getNUMBERTerminalRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_2__4__Impl
	rule__VariableIdentifier__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getColonKeyword_2_4()); }

	':' 

{ after(grammarAccess.getVariableIdentifierAccess().getColonKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_2__5__Impl
	rule__VariableIdentifier__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getNUMBERTerminalRuleCall_2_5()); }
	RULE_NUMBER
{ after(grammarAccess.getVariableIdentifierAccess().getNUMBERTerminalRuleCall_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getRightSquareBracketKeyword_2_6()); }

	']' 

{ after(grammarAccess.getVariableIdentifierAccess().getRightSquareBracketKeyword_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__VariableIdentifier__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_2_1__0__Impl
	rule__VariableIdentifier__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getFullStopKeyword_2_1_0()); }

	'.' 

{ after(grammarAccess.getVariableIdentifierAccess().getFullStopKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableIdentifier__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableIdentifier__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableIdentifier__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_2_1_1()); }
	RULE_ID
{ after(grammarAccess.getVariableIdentifierAccess().getIDTerminalRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ModulesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModulesModuleParserRuleCall_0()); }
	ruleModule{ after(grammarAccess.getModelAccess().getModulesModuleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModuleElementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleElementModuleElementParserRuleCall_2_0()); }
	ruleModuleElement{ after(grammarAccess.getModuleAccess().getModuleElementModuleElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainModule__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainModuleAccess().getNameMainKeyword_0()); }
(
{ before(grammarAccess.getMainModuleAccess().getNameMainKeyword_0()); }

	'main' 

{ after(grammarAccess.getMainModuleAccess().getNameMainKeyword_0()); }
)

{ after(grammarAccess.getMainModuleAccess().getNameMainKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getOtherModuleAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__ParamsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getParamsFormalParameterParserRuleCall_1_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getOtherModuleAccess().getParamsFormalParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OtherModule__ParamsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherModuleAccess().getParamsFormalParameterParserRuleCall_1_2_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getOtherModuleAccess().getParamsFormalParameterParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__VarsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVarsVarBodyParserRuleCall_1_0()); }
	ruleVarBody{ after(grammarAccess.getVariableDeclarationAccess().getVarsVarBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariableDeclaration__VarsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableDeclarationAccess().getVarsVarBodyParserRuleCall_1_0()); }
	ruleVarBody{ after(grammarAccess.getIVariableDeclarationAccess().getVarsVarBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FrozenVariableDeclaration__VarsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFrozenVariableDeclarationAccess().getVarsVarBodyParserRuleCall_1_0()); }
	ruleVarBody{ after(grammarAccess.getFrozenVariableDeclarationAccess().getVarsVarBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarBody__VarIdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAccess().getVarIdIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getVarBodyAccess().getVarIdIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarBody__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAccess().getTypeTypeSpecifierParserRuleCall_2_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getVarBodyAccess().getTypeTypeSpecifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineDeclaration__DefineBodiesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineDeclarationAccess().getDefineBodiesDefineBodyParserRuleCall_1_0()); }
	ruleDefineBody{ after(grammarAccess.getDefineDeclarationAccess().getDefineBodiesDefineBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBody__VarIdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineBodyAccess().getVarIdIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDefineBodyAccess().getVarIdIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBody__AssignmentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineBodyAccess().getAssignmentSimpleExpressionParserRuleCall_2_0()); }
	ruleSimpleExpression{ after(grammarAccess.getDefineBodyAccess().getAssignmentSimpleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantsDeclaration__ConstantsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantsDeclarationAccess().getConstantsIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConstantsDeclarationAccess().getConstantsIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantsDeclaration__ConstantsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantsDeclarationAccess().getConstantsIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getConstantsDeclarationAccess().getConstantsIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignConstraint__BodiesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignConstraintAccess().getBodiesAssignBodyParserRuleCall_1_0()); }
	ruleAssignBody{ after(grammarAccess.getAssignConstraintAccess().getBodiesAssignBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarBodyAssign__VarIdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAssignAccess().getVarIdVariableIdentifierParserRuleCall_0_0()); }
	ruleVariableIdentifier{ after(grammarAccess.getVarBodyAssignAccess().getVarIdVariableIdentifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarBodyAssign__AssignmentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBodyAssignAccess().getAssignmentSimpleExpressionParserRuleCall_2_0()); }
	ruleSimpleExpression{ after(grammarAccess.getVarBodyAssignAccess().getAssignmentSimpleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitBody__VarIdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBodyAccess().getVarIdVariableIdentifierParserRuleCall_2_0()); }
	ruleVariableIdentifier{ after(grammarAccess.getInitBodyAccess().getVarIdVariableIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitBody__InitExprAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBodyAccess().getInitExprSimpleExpressionParserRuleCall_5_0()); }
	ruleSimpleExpression{ after(grammarAccess.getInitBodyAccess().getInitExprSimpleExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NextBody__VarIdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextBodyAccess().getVarIdVariableIdentifierParserRuleCall_2_0()); }
	ruleVariableIdentifier{ after(grammarAccess.getNextBodyAccess().getVarIdVariableIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NextBody__NextExprAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextBodyAccess().getNextExprSimpleExpressionParserRuleCall_5_0()); }
	ruleSimpleExpression{ after(grammarAccess.getNextBodyAccess().getNextExprSimpleExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransConstraint__TransExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransConstraintAccess().getTransExprSimpleExpressionParserRuleCall_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getTransConstraintAccess().getTransExprSimpleExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitConstraint__InitExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitConstraintAccess().getInitExprSimpleExpressionParserRuleCall_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getInitConstraintAccess().getInitExprSimpleExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InvarConstraint__InvarExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarConstraintAccess().getInvarExprSimpleExpressionParserRuleCall_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getInvarConstraintAccess().getInvarExprSimpleExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FairnessExpression__FairnessExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFairnessExpressionAccess().getFairnessExprSimpleExpressionParserRuleCall_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getFairnessExpressionAccess().getFairnessExprSimpleExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JusticeExpression__JusticeExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJusticeExpressionAccess().getJusticeExprSimpleExpressionParserRuleCall_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getJusticeExpressionAccess().getJusticeExprSimpleExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionExpression__FirstCompassionExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompassionExpressionAccess().getFirstCompassionExprSimpleExpressionParserRuleCall_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getCompassionExpressionAccess().getFirstCompassionExprSimpleExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionExpression__SecondCompassionExprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompassionExpressionAccess().getSecondCompassionExprSimpleExpressionParserRuleCall_3_0()); }
	ruleSimpleExpression{ after(grammarAccess.getCompassionExpressionAccess().getSecondCompassionExprSimpleExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InvarSpecification__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarSpecificationAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getInvarSpecificationAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InvarSpecification__InvarExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvarSpecificationAccess().getInvarExprSimpleExpressionParserRuleCall_2_0()); }
	ruleSimpleExpression{ after(grammarAccess.getInvarSpecificationAccess().getInvarExprSimpleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__NameKeyWordAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getNameKeyWordNAMEKeyword_1_0_0()); }
(
{ before(grammarAccess.getCtlSpecificationAccess().getNameKeyWordNAMEKeyword_1_0_0()); }

	'NAME' 

{ after(grammarAccess.getCtlSpecificationAccess().getNameKeyWordNAMEKeyword_1_0_0()); }
)

{ after(grammarAccess.getCtlSpecificationAccess().getNameKeyWordNAMEKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getCtlSpecificationAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpecification__CtlExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCtlSpecificationAccess().getCtlExprSimpleExpressionParserRuleCall_2_0()); }
	ruleSimpleExpression{ after(grammarAccess.getCtlSpecificationAccess().getCtlExprSimpleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpecification__NameIdAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtlSpecificationAccess().getNameIdNAMEKeyword_1_0_0()); }
(
{ before(grammarAccess.getLtlSpecificationAccess().getNameIdNAMEKeyword_1_0_0()); }

	'NAME' 

{ after(grammarAccess.getLtlSpecificationAccess().getNameIdNAMEKeyword_1_0_0()); }
)

{ after(grammarAccess.getLtlSpecificationAccess().getNameIdNAMEKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpecification__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtlSpecificationAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getLtlSpecificationAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpecification__LtlExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtlSpecificationAccess().getLtlExprSimpleExpressionParserRuleCall_2_0()); }
	ruleSimpleExpression{ after(grammarAccess.getLtlSpecificationAccess().getLtlExprSimpleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__WordNumberAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getWordNumberNUMBERTerminalRuleCall_1_1_2_0()); }
	RULE_NUMBER{ after(grammarAccess.getSimpleTypeAccess().getWordNumberNUMBERTerminalRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__UWordNumberAssignment_2_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getUWordNumberNUMBERTerminalRuleCall_2_1_3_0()); }
	RULE_NUMBER{ after(grammarAccess.getSimpleTypeAccess().getUWordNumberNUMBERTerminalRuleCall_2_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__SignedNumberAssignment_3_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getSignedNumberNUMBERTerminalRuleCall_3_1_2_0()); }
	RULE_NUMBER{ after(grammarAccess.getSimpleTypeAccess().getSignedNumberNUMBERTerminalRuleCall_3_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__ValueAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getValueValParserRuleCall_4_2_0()); }
	ruleVal{ after(grammarAccess.getSimpleTypeAccess().getValueValParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__ValueAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getValueValParserRuleCall_4_3_1_0()); }
	ruleVal{ after(grammarAccess.getSimpleTypeAccess().getValueValParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__LowAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getLowNUMBERTerminalRuleCall_5_1_0()); }
	RULE_NUMBER{ after(grammarAccess.getSimpleTypeAccess().getLowNUMBERTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__HighAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getHighNUMBERTerminalRuleCall_5_3_0()); }
	RULE_NUMBER{ after(grammarAccess.getSimpleTypeAccess().getHighNUMBERTerminalRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__BoundsAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getBoundsRangeParserRuleCall_6_2_0()); }
	ruleRange{ after(grammarAccess.getSimpleTypeAccess().getBoundsRangeParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__TypeAssignment_6_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getTypeSimpleTypeParserRuleCall_6_4_0()); }
	ruleSimpleType{ after(grammarAccess.getSimpleTypeAccess().getTypeSimpleTypeParserRuleCall_6_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__ModuleAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getModuleModuleCrossReference_0_1_1_0()); }
(
{ before(grammarAccess.getModuleTypeAccess().getModuleModuleIDTerminalRuleCall_0_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getModuleTypeAccess().getModuleModuleIDTerminalRuleCall_0_1_1_0_1()); }
)
{ after(grammarAccess.getModuleTypeAccess().getModuleModuleCrossReference_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__ParamsAssignment_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getParamsSimpleExpressionParserRuleCall_0_1_2_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getModuleTypeAccess().getParamsSimpleExpressionParserRuleCall_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__ParamsAssignment_0_1_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getParamsSimpleExpressionParserRuleCall_0_1_2_2_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getModuleTypeAccess().getParamsSimpleExpressionParserRuleCall_0_1_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__ModuleAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getModuleModuleCrossReference_1_1_0_0()); }
(
{ before(grammarAccess.getModuleTypeAccess().getModuleModuleIDTerminalRuleCall_1_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getModuleTypeAccess().getModuleModuleIDTerminalRuleCall_1_1_0_0_1()); }
)
{ after(grammarAccess.getModuleTypeAccess().getModuleModuleCrossReference_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__ParamsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getParamsSimpleExpressionParserRuleCall_1_1_1_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getModuleTypeAccess().getParamsSimpleExpressionParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__ParamsAssignment_1_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleTypeAccess().getParamsSimpleExpressionParserRuleCall_1_1_1_2_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getModuleTypeAccess().getParamsSimpleExpressionParserRuleCall_1_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__ParamIdAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getParamIdIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getFormalParameterAccess().getParamIdIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NUMBER : RULE_INT;

RULE_SL_COMMENT : '--' RULE_SL_COMMENT_BODY;

fragment RULE_SL_COMMENT_BODY : ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : ('A'..'Z'|'a'..'z'|'_') ('A'..'Z'|'a'..'z'|'_'|'0'..'9'|'$'|'#'|'-'|'.')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


