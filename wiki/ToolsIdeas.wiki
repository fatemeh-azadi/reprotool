#summary List of ideas for model checkers

= Introduction =

We will compile a list of checks using the !ReProTool metamodel that could be interesting from the software engineering perspective.

= List of Ideas =

  * a call-graph can be used to identify suspicious methods such as public methods that have never been used.

  * automated generation of contracts from specification
  
  * Specification -> Code documentation comments (or context help in IDE, e.g onMouseOver() all textual parts of specification related to identifier are displayed)

  * Automated generation of JUnit-like tests

  * find a public(?) method that is not connected to any requirement

  * when AST is created, we can express some constraints that would otherwise be impossible within the source programming language. For example, in PHP, we could create a following constraint. The property A.p can only be access from class B while accesses from A are forbidden. These constraints could be encoded to the PHP comments.